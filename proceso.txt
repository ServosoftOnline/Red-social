ESTE MANUAL CONTIENE TODO EL PROCESO DE CREACIÓN DEL PROYECTO.
UNA VEZ ACABADO CREARÉ EN TUTORIALES ESTE MISMO DOCUMENTO PERO ELIMINANDO LAS PARTES ESPECIFICAS DE ESTE PROYECTO 

1.- Hacer el diseño de la base de datos con sus modelos

    - Modelo user:
        - _id
        - name
        - nick
        - password
        - role
        - imagen
        - created_at (fecha de registro)

    - Modelo publication
        - _id
        - user (_id_usuario)
        - text
        - file
        - created_at (fecha de creación)
        
    - Modelo follow
        - _id
        - user (_id_usuario_seguidor)
        - followed (_id_usuario_seguido)
        - created_at (quien siguio a quien)

2.- Crear el backend de la api-rest.

    - Asegurarse de tener instalado nodejs (node --version) y npm (npm --version)
    - Ejecutar npm init
        - Cuando se cree el archivo package.json añadir  "type": "module" si se va a trabajar con import y export

    - Instalar las depedencias
        - express: npm i express
        - mongoose: npm i mongoose
        - mongoose pagination: npm i mongoose-pagination
        - multer: npm i multer
        - moment: npm i moment (manejo de fechas)
        - validator: npm i validator (validar información)
        - bcrypt: npm i bcrypt-nodejs (cifrar contraseñas)
        - simple: npm i jwt-simple (una de las librerias de jwt)
        - cors: npm i cors (acceso cruzados entre dominios)
        - nodemon solo en desarrollo: npm i nodemon --save-dev

    - Configurar nodemon:
        - añadir en los scripts de package.json lo siguiente "start": "nodemon index.js"
        - crear vacio el archivo index.js

    - Probar si mongodb esta instalado: mongosh. Control + C dos veces para salir

    - Crear el servidor en index.js

        - Conexión a la bbdd:
            - Crear una carpeta llamada database y en su interior el archivo connection.js y crear ahí la función de conexión
            - Importar connection.js y ejecutarla en index.js
            
        - Crear servidor node
        - Configurar cors
        - Convertir los datos del body a objetos js
        - Cargar conf rutas
        - Poner servidor a escuchar peticiones hhtp

    - Crear la carpeta controllers y en su interior un archivo por cada modelo
        - Creo un metodo de pruebas en cada archivo
    
    - Creo la carpeta routes y en su interior un archivo por cada modelo
    

